<?xml version="1.0" encoding="UTF-8"?>
<testsuite name="CarSharingTest" tests="1" skipped="0" failures="1" errors="0" timestamp="2022-12-12T21:49:10" hostname="RECON" time="16.389">
  <properties/>
  <testcase name="start" classname="CarSharingTest" time="16.389">
    <failure message="java.lang.AssertionError: Error in test #8&#10;&#10;In this test, the program is running for a long time, more than 15 seconds. Most likely, the program has gone into an infinite loop.&#10;&#10;Please find below the output of your program during this failed test.&#10;Note that the '&gt;' character indicates the beginning of the input line.&#10;&#10;---&#10;&#10;Arguments: -databaseFileName carsharing&#10;&#10;1. Log in as a manager&#10;2. Log in as a customer&#10;3. Create a customer&#10;0. Exit&#10;&gt; 2&#10;Customer list:&#10;The customer list is empty!&#10;&#10;1. Log in as a manager&#10;2. Log in as a customer&#10;3. Create a customer&#10;0. Exit&#10;&gt; 3&#10;Enter the customer name:&#10;&gt; First customer&#10;The customer First customer successfully created!&#10;&#10;1. Log in as a manager&#10;2. Log in as a customer&#10;3. Create a customer&#10;0. Exit&#10;&gt; 3&#10;Enter the customer name:&#10;&gt; Second customer&#10;The customer Second customer successfully created!&#10;&#10;1. Log in as a manager&#10;2. Log in as a customer&#10;3. Create a customer&#10;0. Exit&#10;&gt; 2&#10;Customer list:&#10;1. First customer&#10;2. Second customer&#10;0. Back&#10;&#10;&gt; 1&#10;1. Rent a car&#10;2. Return a rented car&#10;3. My rented car&#10;0. Back&#10;&gt; 3" type="java.lang.AssertionError">java.lang.AssertionError: Error in test #8

In this test, the program is running for a long time, more than 15 seconds. Most likely, the program has gone into an infinite loop.

Please find below the output of your program during this failed test.
Note that the '&gt;' character indicates the beginning of the input line.

---

Arguments: -databaseFileName carsharing

1. Log in as a manager
2. Log in as a customer
3. Create a customer
0. Exit
&gt; 2
Customer list:
The customer list is empty!

1. Log in as a manager
2. Log in as a customer
3. Create a customer
0. Exit
&gt; 3
Enter the customer name:
&gt; First customer
The customer First customer successfully created!

1. Log in as a manager
2. Log in as a customer
3. Create a customer
0. Exit
&gt; 3
Enter the customer name:
&gt; Second customer
The customer Second customer successfully created!

1. Log in as a manager
2. Log in as a customer
3. Create a customer
0. Exit
&gt; 2
Customer list:
1. First customer
2. Second customer
0. Back

&gt; 1
1. Rent a car
2. Return a rented car
3. My rented car
0. Back
&gt; 3
	at org.junit.Assert.fail(Assert.java:89)
	at org.hyperskill.hstest.stage.StageTest.start(StageTest.java:203)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:77)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.base/java.lang.reflect.Method.invoke(Method.java:568)
	at org.junit.runners.model.FrameworkMethod$1.runReflectiveCall(FrameworkMethod.java:59)
	at org.junit.internal.runners.model.ReflectiveCallable.run(ReflectiveCallable.java:12)
	at org.junit.runners.model.FrameworkMethod.invokeExplosively(FrameworkMethod.java:56)
	at org.junit.internal.runners.statements.InvokeMethod.evaluate(InvokeMethod.java:17)
	at org.junit.runners.ParentRunner$3.evaluate(ParentRunner.java:306)
	at org.junit.runners.BlockJUnit4ClassRunner$1.evaluate(BlockJUnit4ClassRunner.java:100)
	at org.junit.runners.ParentRunner.runLeaf(ParentRunner.java:366)
	at org.junit.runners.BlockJUnit4ClassRunner.runChild(BlockJUnit4ClassRunner.java:103)
	at org.junit.runners.BlockJUnit4ClassRunner.runChild(BlockJUnit4ClassRunner.java:63)
	at org.junit.runners.ParentRunner$4.run(ParentRunner.java:331)
	at org.junit.runners.ParentRunner$1.schedule(ParentRunner.java:79)
	at org.junit.runners.ParentRunner.runChildren(ParentRunner.java:329)
	at org.junit.runners.ParentRunner.access$100(ParentRunner.java:66)
	at org.junit.runners.ParentRunner$2.evaluate(ParentRunner.java:293)
	at org.junit.internal.runners.statements.RunBefores.evaluate(RunBefores.java:26)
	at org.junit.runners.ParentRunner$3.evaluate(ParentRunner.java:306)
	at org.junit.runners.ParentRunner.run(ParentRunner.java:413)
	at org.gradle.api.internal.tasks.testing.junit.JUnitTestClassExecutor.runTestClass(JUnitTestClassExecutor.java:110)
	at org.gradle.api.internal.tasks.testing.junit.JUnitTestClassExecutor.execute(JUnitTestClassExecutor.java:58)
	at org.gradle.api.internal.tasks.testing.junit.JUnitTestClassExecutor.execute(JUnitTestClassExecutor.java:38)
	at org.gradle.api.internal.tasks.testing.junit.AbstractJUnitTestClassProcessor.processTestClass(AbstractJUnitTestClassProcessor.java:62)
	at org.gradle.api.internal.tasks.testing.SuiteTestClassProcessor.processTestClass(SuiteTestClassProcessor.java:51)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:77)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.base/java.lang.reflect.Method.invoke(Method.java:568)
	at org.gradle.internal.dispatch.ReflectionDispatch.dispatch(ReflectionDispatch.java:36)
	at org.gradle.internal.dispatch.ReflectionDispatch.dispatch(ReflectionDispatch.java:24)
	at org.gradle.internal.dispatch.ContextClassLoaderDispatch.dispatch(ContextClassLoaderDispatch.java:33)
	at org.gradle.internal.dispatch.ProxyDispatchAdapter$DispatchingInvocationHandler.invoke(ProxyDispatchAdapter.java:94)
	at jdk.proxy1/jdk.proxy1.$Proxy2.processTestClass(Unknown Source)
	at org.gradle.api.internal.tasks.testing.worker.TestWorker$2.run(TestWorker.java:176)
	at org.gradle.api.internal.tasks.testing.worker.TestWorker.executeAndMaintainThreadName(TestWorker.java:129)
	at org.gradle.api.internal.tasks.testing.worker.TestWorker.execute(TestWorker.java:100)
	at org.gradle.api.internal.tasks.testing.worker.TestWorker.execute(TestWorker.java:60)
	at org.gradle.process.internal.worker.child.ActionExecutionWorker.execute(ActionExecutionWorker.java:56)
	at org.gradle.process.internal.worker.child.SystemApplicationClassLoaderWorker.call(SystemApplicationClassLoaderWorker.java:133)
	at org.gradle.process.internal.worker.child.SystemApplicationClassLoaderWorker.call(SystemApplicationClassLoaderWorker.java:71)
	at worker.org.gradle.process.internal.worker.GradleWorkerMain.run(GradleWorkerMain.java:69)
	at worker.org.gradle.process.internal.worker.GradleWorkerMain.main(GradleWorkerMain.java:74)
</failure>
  </testcase>
  <system-out><![CDATA[?[1;31m
Start test 1?[0m
1. Log in as a manager
2. Log in as a customer
3. Create a customer
0. Exit
> 0
?[1;31m
Start test 2?[0m
1. Log in as a manager
2. Log in as a customer
3. Create a customer
0. Exit
> 1
1. Company list
2. Create a company
0. Back
> 0
1. Log in as a manager
2. Log in as a customer
3. Create a customer
0. Exit
?[1;31m
Start test 3?[0m
?[1;31m
Start test 4?[0m
?[1;31m
Start test 5?[0m
?[1;31m
Start test 6?[0m
1. Log in as a manager
2. Log in as a customer
3. Create a customer
0. Exit
> 1
1. Company list
2. Create a company
0. Back
> 1
List of companies:
The company list is empty!

1. Company list
2. Create a company
0. Back
> 2
Enter the company name:
> Super company
The company Super company successfully created!

1. Company list
2. Create a company
0. Back
> 1
List of companies:
1. Super company
0. Back

> 0
1. Company list
2. Create a company
0. Back
> 2
Enter the company name:
> Another company
The company Another company successfully created!

1. Company list
2. Create a company
0. Back
> 2
Enter the company name:
> One more company
The company One more company successfully created!

1. Company list
2. Create a company
0. Back
> 1
List of companies:
1. Super company
2. Another company
3. One more company
0. Back

> 2
Another company company
1. Car list
2. Create a car
0. Back
?[1;31m
Start test 7?[0m
1. Log in as a manager
2. Log in as a customer
3. Create a customer
0. Exit
> 1
1. Company list
2. Create a company
0. Back
> 2
Enter the company name:
> Car To Go
The company Car To Go successfully created!

1. Company list
2. Create a company
0. Back
> 2
Enter the company name:
> Drive Now
The company Drive Now successfully created!

1. Company list
2. Create a company
0. Back
> 1
List of companies:
1. Car To Go
2. Drive Now
0. Back

> 1
Car To Go company
1. Car list
2. Create a car
0. Back
> 1
Car list:
The car list is empty!

Car To Go company
1. Car list
2. Create a car
0. Back
> 2
Enter the car name:
> Hyundai Venue
The car Hyundai Venue successfully created!

Car To Go company
1. Car list
2. Create a car
0. Back
> 2
Enter the car name:
> Maruti Suzuki Dzire
The car Maruti Suzuki Dzire successfully created!

Car To Go company
1. Car list
2. Create a car
0. Back
> 1
Car list:
1. Hyundai Venue
2. Maruti Suzuki Dzire

Car To Go company
1. Car list
2. Create a car
0. Back
> 0
1. Company list
2. Create a company
0. Back
> 1
List of companies:
1. Car To Go
2. Drive Now
0. Back

> 2
Drive Now company
1. Car list
2. Create a car
0. Back
> 1
Car list:
The car list is empty!

Drive Now company
1. Car list
2. Create a car
0. Back
> 2
Enter the car name:
> Lamborghini Urraco
The car Lamborghini Urraco successfully created!

Drive Now company
1. Car list
2. Create a car
0. Back
> 1
Car list:
1. Lamborghini Urraco

Drive Now company
1. Car list
2. Create a car
0. Back
> 0
1. Company list
2. Create a company
0. Back
> 0
1. Log in as a manager
2. Log in as a customer
3. Create a customer
0. Exit
> 0
?[1;31m
Start test 8?[0m
1. Log in as a manager
2. Log in as a customer
3. Create a customer
0. Exit
> 2
Customer list:
The customer list is empty!

1. Log in as a manager
2. Log in as a customer
3. Create a customer
0. Exit
> 3
Enter the customer name:
> First customer
The customer First customer successfully created!

1. Log in as a manager
2. Log in as a customer
3. Create a customer
0. Exit
> 3
Enter the customer name:
> Second customer
The customer Second customer successfully created!

1. Log in as a manager
2. Log in as a customer
3. Create a customer
0. Exit
> 2
Customer list:
1. First customer
2. Second customer
0. Back

> 1
1. Rent a car
2. Return a rented car
3. My rented car
0. Back
> 3
]]></system-out>
  <system-err><![CDATA[]]></system-err>
</testsuite>
